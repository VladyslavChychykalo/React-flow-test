{"version":3,"sources":["components/BaseData/BaseData.js","components/FlowNodes/Trigger.js","components/FlowNodes/Conditions.js","components/FlowNodes/Send.js","components/FlowNodes/Delay.js","components/ButtonBar/ButtonBar.js","components/ReactFlow/ReactFlow.js","components/ReactFlow/index.js","components/App/App.js","index.js"],"names":["BaseData","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","lists","email","sms","currentType","updateList","type","options","listContainer","document","querySelector","innerHTML","forEach","option","i","optionElem","createElement","setAttribute","append","onChange","event","setState","target","value","onCheckbox","e","disabled","checked","_createClass","key","this","_jsxs","_Fragment","children","_jsx","className","InputGroup","InputGroupAddon","addonType","InputGroupText","FontAwesomeIcon","icon","faFileSignature","Input","placeholder","addon","faEnvelopeOpenText","id","faBars","FormGroup","check","inline","Label","Component","Trigger","props","console","log","style","fontSize","padding","name","Handle","position","background","onConnect","params","Conditions","ConditionsCreate","left","Button","outline","color","onClick","block","closest","previousElementSibling","conditionsGroup","classList","add","removeBtn","addEventListener","remove","addConditions","faPlus","Send","defaultChecked","Delay","row","Col","sm","defaultValue","ButtonBar","_ref","addNode","nodes","useStoreState","lastNodeH","lastNodeY","__rf","height","y","Row","width","nodeTypes","triggerNode","conditionsNode","delayNode","sendNode","RuleBasedFlow","_useState","useState","_useState2","_slicedToArray","elements","setElements","_useState3","_useState4","reactflowInstance","setReactflowInstance","useEffect","triggerBtn","conditionBtn","delayBtn","sendBtn","fitView","findIndex","elem","onLoad","useCallback","rfi","ReactFlowProvider","prevY","prevH","selectable","undefined","_objectSpread","border","borderRadius","offsetY","els","toString","data","label","x","ReactFlow","addEdge","animated","stroke","strokeWidth","onElementsRemove","elementsToRemove","removeElements","deleteKeyCode","Background","gap","MiniMap","nodeColor","n","nodeStrokeWidth","nodeBorderRadius","Controls","App","flowBlock","showFlowBlock","role","nextStepBtn","size","faLongArrowAltRight","flowBlockRender","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a255e9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  FormGroup,\n  Label,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFileSignature,\n  faBars,\n  faEnvelopeOpenText,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default class BaseData extends Component {\n  state = {\n    lists: {\n      email: ['All', 'Lotto 247 Masterlist', 'Lotto 247 Conversion List'],\n      sms: [\n        'All',\n        'Lotto 247 SMS Masterlist',\n        'Test List SMS RO',\n        'Test List SMS ES',\n        'Test List SMS PT',\n        'Test List SMS RU',\n        'Test List SMS EN',\n      ],\n    },\n    currentType: 'email',\n  };\n\n  componentDidMount() {\n    this.updateList('email');\n    document.querySelector('#test-email').disabled =\n      !document.querySelector('#test-checkbox').checked;\n  }\n\n  updateList = (type) => {\n    const options = this.state.lists[type];\n    const listContainer = document.querySelector('#mlists');\n    listContainer.innerHTML = '';\n\n    options.forEach((option, i) => {\n      const optionElem = document.createElement('option');\n      optionElem.setAttribute('value', i + 1);\n      optionElem.innerHTML = option;\n      listContainer.append(optionElem);\n    });\n  };\n\n  onChange = (event) => {\n    this.setState({ currentType: event.target.value });\n    this.updateList(event.target.value);\n  };\n\n  onCheckbox = (e) => {\n    document.querySelector('#test-email').disabled = !e.target.checked;\n  };\n\n  render() {\n    return (\n      <>\n        <div className='row'>\n          <div className='col mb-3'>\n            <InputGroup>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <FontAwesomeIcon icon={faFileSignature} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input placeholder='Rule name' />\n              <InputGroupAddon addonType='append'>\n                <InputGroupText>\n                  <Input\n                    addon\n                    type='checkbox'\n                    aria-label='Checkbox for following text input'\n                  />\n                  <span className='ml-2'>Rule enabled</span>\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </div>\n        </div>\n        <div className='row border-bottom'>\n          <div className='col-md-6 mb-3'>\n            <InputGroup>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <FontAwesomeIcon icon={faEnvelopeOpenText} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <select\n                className='custom-select'\n                id='send-type'\n                onChange={this.onChange}\n                value={this.state.currentType}\n              >\n                <option value='email'>Email</option>\n                <option value='sms'>SMS</option>\n              </select>\n            </InputGroup>\n          </div>\n          <div className='col-md-6 mb-3'>\n            <InputGroup>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <FontAwesomeIcon icon={faBars} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <select className='custom-select' id='mlists'></select>\n            </InputGroup>\n          </div>\n        </div>\n        <div className='row my-3 border-bottom'>\n          <div className='col-md-6 mb-3'>\n            <FormGroup check inline>\n              <Label check>\n                <Input\n                  type='checkbox'\n                  onChange={this.onCheckbox}\n                  id='test-checkbox'\n                />{' '}\n                Send all campaigns to test email\n              </Label>\n            </FormGroup>\n          </div>\n          <div className='col-md-6 mb-3'>\n            <Input placeholder='Email for test' id='test-email' />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { FormGroup, Input } from 'reactstrap';\nimport { Handle } from 'react-flow-renderer';\n\nconst Trigger = (props) => {\n  console.log(props);\n  const flowStyle = { fontSize: '1.2rem', padding: '5px 20px' };\n  return (\n    <>\n      <p className='badge badge-pill badge-danger' style={flowStyle}>\n        Trigger\n      </p>\n      <FormGroup>\n        <Input type='select' name='select' id='triggersSelect'>\n          <option>CustomerID</option>\n          <option>FTD</option>\n          <option>MarketingOptInInd</option>\n        </Input>\n      </FormGroup>\n      <Handle\n        type='source'\n        position='bottom'\n        style={{ background: '#dc3545' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n      />\n    </>\n  );\n};\n\nexport default Trigger;\n","import { Button } from 'reactstrap';\nimport { Handle } from 'react-flow-renderer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst Conditions = (props) => {\n  const flowStyle = { fontSize: '1.2rem', padding: '5px 20px' };\n  return (\n    <>\n      <Handle\n        type='target'\n        position='top'\n        style={{ background: '#007bff' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n      />\n      <p className='badge badge-pill badge-primary' style={flowStyle}>\n        Conditions\n      </p>\n      <ConditionsCreate />\n      <Handle\n        type='source'\n        id='yes'\n        position='bottom'\n        style={{ background: '#d2f95d', left: '20%' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n        className='handle-yes'\n      />\n      <Handle\n        type='source'\n        id='no'\n        position='bottom'\n        style={{ background: '#f96a5d', left: '80%' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n        className='handle-no'\n      />\n    </>\n  );\n};\nexport default Conditions;\n\nconst ConditionsCreate = () => {\n  let i = 1;\n  const addConditions = (target) => {\n    const block = target.closest('.btn-outline-success').previousElementSibling;\n    const conditionsGroup = document.createElement('div');\n    conditionsGroup.classList.add(\n      'mb-3',\n      'form-inline',\n      'd-flex',\n      'justify-content-center'\n    );\n    conditionsGroup.setAttribute('id', `cond-group-${i++}`);\n    conditionsGroup.innerHTML = `\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<select name=\"custom-field\" id=\"custom-field\" class=\"form-control mr-3\">\n\t\t\t\t\t<option value=\"LastTransactionType\">LastTransactionType</option>\n\t\t\t\t\t<option value=\"CustomerID\">CustomerID</option>\n\t\t\t\t\t<option value=\"FirstName\">FirstName</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div className=\"form-group mr-3\">\n\t\t\t\t<select name=\"condition-state\" id=\"condition-state\" class=\"form-control mr-3\">\n\t\t\t\t\t<option value=\"is\">is</option>\n\t\t\t\t\t<option value=\"is not\">is not</option>\n\t\t\t\t\t<option value=\"less then\">less then</option>\n\t\t\t\t</select>\n\t\t\t\t<input name=\"condition-value\" id=\"condition-value\" type=\"text\" class=\"form-control mr-3\"/>\n\t\t\t</div>\n\t\t`;\n    const removeBtn = document.createElement('button');\n    removeBtn.classList.add('btn', 'btn-outline', 'btn-danger');\n    removeBtn.innerHTML = '<i class=\"fas fa-times\"></i>';\n    removeBtn.addEventListener('click', () => conditionsGroup.remove());\n    conditionsGroup.append(removeBtn);\n    block.append(conditionsGroup);\n  };\n  return (\n    <>\n      <div className='conditions-block'></div>\n      <Button\n        outline\n        color='success'\n        className='mb-3'\n        onClick={(e) => addConditions(e.target)}\n      >\n        <FontAwesomeIcon icon={faPlus} />\n      </Button>\n    </>\n  );\n};\n","import { FormGroup, Label, Input } from 'reactstrap';\nimport { Handle } from 'react-flow-renderer';\n\nconst Send = (props) => {\n  const flowStyle = { fontSize: '1.2rem', padding: '5px 20px' };\n\n  console.log(props);\n  return (\n    <>\n      <Handle\n        type='target'\n        position='top'\n        style={{ background: '#28a745' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n      />\n      <p className='badge badge-pill badge-success' style={flowStyle}>\n        Send\n      </p>\n      <FormGroup>\n        <Input type='select' name='select' id='campaignSelect'>\n          <option>L247_Conversion_RNP_EN_Day1</option>\n          <option>L247_Conversion_RNP_EN_Day4</option>\n          <option>L247_Conversion_RNP_EN_Day7</option>\n          <option>L247_Conversion_RNP_EN_Day14</option>\n          <option>L247_Conversion_RNP_EN_Day20</option>\n          <option>L247_Conversion_RNP_EN_Day30</option>\n        </Input>\n      </FormGroup>\n      <FormGroup check className='d-flex'>\n        <Label check className='mr-5'>\n          <Input type='checkbox' defaultChecked /> Track opens\n        </Label>\n        <Label check className='mr-5'>\n          <Input type='checkbox' defaultChecked /> Track clicks\n        </Label>\n        <Label check className='mr-5'>\n          <Input type='checkbox' /> Ignore unsubscribed\n        </Label>\n        <Label check className='mr-5'>\n          <Input type='checkbox' /> Include unconfirmed\n        </Label>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default Send;\n","import { FormGroup, Label, Input, Col } from 'reactstrap';\nimport { Handle } from 'react-flow-renderer';\n\nconst Delay = () => {\n  const flowStyle = { fontSize: '1.2rem', padding: '5px 20px' };\n  return (\n    <>\n      <Handle\n        type='target'\n        position='top'\n        style={{ background: '#ffc107' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n      />\n      <p className='badge badge-pill badge-warning' style={flowStyle}>\n        Delay\n      </p>\n      <FormGroup row>\n        <Col sm={6}>\n          <Input type='number' defaultValue={3} />\n        </Col>\n        <Col sm={6}>\n          <Input\n            type='select'\n            name='select'\n            id='delaySelect'\n            defaultValue={'Days'}\n          >\n            <option>Minutes</option>\n            <option>Hours</option>\n            <option>Days</option>\n          </Input>\n        </Col>\n      </FormGroup>\n      <Handle\n        type='source'\n        position='bottom'\n        style={{ background: '#ffc107' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n      />\n    </>\n  );\n};\n\nexport default Delay;\n","import { Row, Col, Button } from 'reactstrap';\nimport { Trigger, Conditions, Delay, Send } from '../FlowNodes';\nimport { useStoreState } from 'react-flow-renderer';\n\nconst ButtonBar = ({ addNode }) => {\n  const nodes = useStoreState((state) => state.nodes);\n\n  let lastNodeH = -1;\n  let lastNodeY = -1;\n\n  if (nodes.length > 0) {\n    lastNodeH = nodes[nodes.length - 1].__rf.height;\n    lastNodeY = nodes[nodes.length - 1].__rf.position.y;\n  }\n\n  return (\n    <Row className='py-2'>\n      <Col sm={3}>\n        <Button\n          color='danger'\n          className='trigger-node-button'\n          onClick={() =>\n            addNode(\n              lastNodeY,\n              lastNodeH,\n              <Trigger />,\n              'triggerNode',\n              { background: '#fae1e3' },\n              false\n            )\n          }\n        >\n          Add Trigger node\n        </Button>\n      </Col>\n      <Col sm={3}>\n        <Button\n          color='primary'\n          className='condition-node-button'\n          onClick={() =>\n            addNode(lastNodeY, lastNodeH, <Conditions />, 'conditionsNode', {\n              width: 800,\n              background: '#d9ebff',\n            })\n          }\n        >\n          Add Condition node\n        </Button>\n      </Col>\n      <Col sm={3}>\n        <Button\n          color='warning'\n          className='delay-node-button'\n          onClick={() =>\n            addNode(lastNodeY, lastNodeH, <Delay />, 'delayNode', {\n              width: 300,\n              background: '#fff6da',\n            })\n          }\n        >\n          Add Delay node\n        </Button>\n      </Col>\n      <Col sm={3}>\n        <Button\n          color='success'\n          className='send-node-button'\n          onClick={() =>\n            addNode(lastNodeY, lastNodeH, <Send />, 'sendNode', {\n              width: 700,\n              background: '#dff2e3',\n            })\n          }\n        >\n          Add Send node\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ButtonBar;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  removeElements,\n  addEdge,\n  Controls,\n  Background,\n  MiniMap,\n} from 'react-flow-renderer';\nimport ButtonBar from '../ButtonBar';\nimport './ReactFlow.css';\nimport { Trigger, Conditions, Delay, Send } from '../FlowNodes';\n\nconst nodeTypes = {\n  triggerNode: Trigger,\n  conditionsNode: Conditions,\n  delayNode: Delay,\n  sendNode: Send,\n};\n\nconst RuleBasedFlow = () => {\n  const [elements, setElements] = useState([]);\n  const [reactflowInstance, setReactflowInstance] = useState(null);\n  const onElementsRemove = (elementsToRemove) =>\n    setElements((els) => removeElements(elementsToRemove, els));\n\n  console.log(elements);\n\n  const addNode = (prevY, prevH, name, type, style, selectable = true) => {\n    style = {\n      width: 400,\n      border: '1px solid #dddddd',\n      borderRadius: 10,\n      padding: '20px 10px',\n      background: '#ffffff',\n      ...style,\n    };\n\n    console.log(prevH); // height\n    console.log(prevY); // 100\n\n    let offsetX = 100;\n    let offsetY = 100;\n\n    if (prevY !== -1) {\n      offsetY = prevY + prevH + 50;\n    }\n\n    setElements((els) =>\n      els.concat({\n        id: (els.length + 1).toString(),\n        data: { label: `${name}` },\n        position: { x: offsetX, y: offsetY },\n        type,\n        style,\n        selectable,\n      })\n    );\n  };\n\n  //   const deleteNode\n\n  const onConnect = (params) =>\n    setElements((els) =>\n      addEdge(\n        {\n          ...params,\n          animated: true,\n          style: { stroke: '#1890ff', strokeWidth: '2px' },\n        },\n        els\n      )\n    );\n\n  useEffect(() => {\n    const triggerBtn = document.querySelector('.trigger-node-button');\n    const conditionBtn = document.querySelector('.condition-node-button');\n    const delayBtn = document.querySelector('.delay-node-button');\n    const sendBtn = document.querySelector('.send-node-button');\n\n    if (reactflowInstance && elements.length > 0) {\n      reactflowInstance.fitView({ padding: 0.25 });\n    }\n\n    const checkTriggerNode = elements.findIndex(\n      (elem) => elem.type === 'triggerNode'\n    );\n    if (checkTriggerNode === -1) {\n      triggerBtn.disabled = false;\n      conditionBtn.disabled = true;\n      delayBtn.disabled = true;\n      sendBtn.disabled = true;\n    } else {\n      triggerBtn.disabled = true;\n      conditionBtn.disabled = false;\n      delayBtn.disabled = false;\n      sendBtn.disabled = false;\n    }\n  }, [reactflowInstance, elements.length, elements]);\n\n  const onLoad = useCallback(\n    (rfi) => {\n      if (!reactflowInstance) {\n        setReactflowInstance(rfi);\n        console.log('flow loaded:', rfi);\n      }\n    },\n    [reactflowInstance]\n  );\n\n  const flowStyles = { height: '70vh' };\n  return (\n    <ReactFlowProvider>\n      <ButtonBar addNode={addNode} />\n      <ReactFlow\n        elements={elements}\n        style={flowStyles}\n        onLoad={onLoad}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onElementsRemove={onElementsRemove}\n        deleteKeyCode={46}\n      >\n        <Background gap={16} color='#888' />\n        <MiniMap\n          nodeColor={(n) => {\n            if (n.type === 'triggerNode') return '#dc3545';\n            if (n.type === 'conditionsNode') return '#007bff';\n            if (n.type === 'delayNode') return '#ffc107';\n            if (n.type === 'sendNode') return '#28a745';\n            return '#dddddd';\n          }}\n          nodeStrokeWidth={0}\n          nodeBorderRadius={10}\n        />\n        <Controls />\n      </ReactFlow>\n    </ReactFlowProvider>\n  );\n};\n\nexport default RuleBasedFlow;\n","import RuleBasedFlow from './ReactFlow';\nexport default RuleBasedFlow;\n","import React, { Component } from 'react';\nimport './App.css';\nimport BaseData from '../BaseData';\nimport RuleBasedFlow from '../ReactFlow';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLongArrowAltRight } from '@fortawesome/free-solid-svg-icons';\n\nexport default class App extends Component {\n  state = {\n    flowBlock: false,\n  };\n\n  showFlowBlock = () => {\n    this.setState({ flowBlock: true });\n  };\n\n  render() {\n    const flowBlock = (\n      <>\n        <div className='alert alert-primary' role='alert'>\n          Use <strong>Delete</strong> key to remove nodes. Note: Trigger node\n          cannot be removed\n        </div>\n        <div className='App'>\n          <RuleBasedFlow />\n        </div>\n      </>\n    );\n\n    const nextStepBtn = (\n      <Button color='primary' size='lg' block onClick={this.showFlowBlock}>\n        Next step\n        <FontAwesomeIcon icon={faLongArrowAltRight} className='ml-2' />\n      </Button>\n    );\n\n    const flowBlockRender = this.state.flowBlock ? flowBlock : nextStepBtn;\n\n    return (\n      <div className='container'>\n        <h1 className='text-center text-primary'>Rules nodes</h1>\n        <BaseData />\n        {flowBlockRender}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}